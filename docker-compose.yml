version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: aiclub_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-aiclub_db}
      POSTGRES_USER: ${POSTGRES_USER:-aiclub_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
    networks:
      - aiclub_network

  # Django Backend with Gunicorn
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aiclub_backend
    restart: always
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py create_superuser_if_none &&
             python manage.py populate_data &&
             gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 2"
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
    environment:
      DEBUG: ${DEBUG:-False}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-this}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1}
      POSTGRES_DB: ${POSTGRES_DB:-aiclub_db}
      POSTGRES_USER: ${POSTGRES_USER:-aiclub_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      - db
    networks:
      - aiclub_network

  # Nginx - serves frontend + proxies API
  nginx:
    image: nginx:alpine
    container_name: aiclub_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      # - static_files:/usr/share/nginx/html/static:ro
      # - media_files:/usr/share/nginx/html/media:ro
    depends_on:
      - backend
    networks:
      - aiclub_network

volumes:
  postgres_data:
  static_files:
  media_files:

networks:
  aiclub_network: